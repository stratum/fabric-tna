#!/usr/bin/env bash
# Copyright 2020-present Open Networking Foundation
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

set -eu -o pipefail

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" > /dev/null 2>&1 && pwd)"
FP4TEST_ROOT="${DIR}"/../..
FABRIC_TNA="${FP4TEST_ROOT}"/..

# shellcheck source=../../../.env
source "${FABRIC_TNA}"/.env

PTF_FILTER=${PTF_FILTER:-}

fabricProfile=$1
if [ -z "${fabricProfile}" ]; then
    echo "fabric-tna profile is not set"
    exit 1
fi

# Find Tofino compiled artifacts
sdeVer_=$(echo "${SDE_VERSION}" | tr . _) # Replace dots with underscores
P4C_OUT=${FABRIC_TNA}/p4src/build/${fabricProfile}/sde_${sdeVer_}
echo "*** Using P4 compiler output in ${P4C_OUT}..."

if [ ! -f "${P4C_OUT}"/pipeline_config.pb.bin ]; then
    echo "ERROR: missing pipeline_config.pb.bin in ${P4C_OUT}"
    exit 1
fi

# Clean up old logs (if any)
rm -rf "${DIR}"/log
mkdir "${DIR}"/log

rnd=${RANDOM}

# tester
# Run and show log
testerRunName=tester-${rnd}
echo "*** Starting ${testerRunName} with ${TESTER_DOCKER_IMG}..."
# Do not attach stdin if running in an environment without it (e.g., Jenkins)
it=$(test -t 0 && echo "-it" || echo "-t")
# shellcheck disable=SC2068
docker run --name "${testerRunName}" "${it}" --privileged --rm \
    -v "${FP4TEST_ROOT}":/fabric-p4test \
    -v "${P4C_OUT}":/p4c-out \
    -e PTF_FILTER="${PTF_FILTER}" \
    --entrypoint /fabric-p4test/run/tv/start_test.sh \
    "${TESTER_DOCKER_IMG}" \
    ${@}
