#!/usr/bin/env bash
# Copyright 2020-present Open Networking Foundation
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

set -eu -o pipefail
set -x

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" > /dev/null 2>&1 && pwd)"
FABRIC_TNA_ROOT="${DIR}"/../..
FABRIC_TNA="${FABRIC_TNA_ROOT}"/..

PTF_FILTER=${PTF_FILTER:-}

# shellcheck source=ptf/run/tm/base.sh
# source "${DIR}/base.sh"

# shellcheck source=.env
source "${FABRIC_TNA}"/.env

fabricProfile=$1
if [ -z "${fabricProfile}" ]; then
    echo "fabric-tna profile is not set"
    exit 1
fi

if [ "${fabricProfile}" = "all" ]; then
    echo "Testing 'all' profiles is not supported on Tofino"
    exit 1
fi
echo "*** Testing profile '${fabricProfile}'..."

# TODO: figure out conceptual things about SDE_VERSION
sdeVer_=$(echo "${SDE_VERSION}" | tr . _) # Replace dots with underscores
P4C_OUT=${FABRIC_TNA}/p4src/build/${fabricProfile}/sde_${sdeVer_}
echo "*** Using P4 compiler output in ${P4C_OUT}..."

testerRunName=tester-${RANDOM}
echo "*** Starting ${testerRunName}..."
# Do not attach stdin if running in an environment without it (e.g., Jenkins)

it=$(test -t 0 && echo "-it" || echo "-t")
# shellcheck disable=SC2068
docker run --name "${testerRunName}" "${it}" --privileged --rm \
    --network 'none' \
    -v "${FABRIC_TNA_ROOT}":/fabric-tna \
    -v "${P4C_OUT}":/p4c-out \
    -e PTF_FILTER="${PTF_FILTER}" \
    --entrypoint /fabric-tna/run/hw/start_test.sh \
    "${TESTER_DOCKER_IMG}" \
    ${@}
