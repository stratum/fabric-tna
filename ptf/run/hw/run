#!/bin/bash
# Copyright 2020-present Open Networking Foundation
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

set -eu -o pipefail

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" > /dev/null 2>&1 && pwd)"
FP4TEST_ROOT="${DIR}"/../..
FABRIC_TNA="${FP4TEST_ROOT}"/..
TM_PORT_JSON=${TM_PORT_JSON:-""}
SWITCH_ADDR=${SWITCH_ADDR:-"10.128.13.29"}

# shellcheck source=.env
source "${FABRIC_TNA}"/.env

PTF_FILTER=${PTF_FILTER:-}

fabricProfile=$1
if [ -z "${fabricProfile}" ]; then
    echo "fabric-tna profile is not set"
    exit 1
fi

echo "*** Testing profile '${fabricProfile}'..."

# Find Tofino compiled artifacts
sdeVer_=$(echo "${SDE_VERSION}" | tr . _) # Replace dots with underscores
P4C_OUT=${FABRIC_TNA}/p4src/build/${fabricProfile}/sde_${sdeVer_}
echo "*** Using P4 compiler output in ${P4C_OUT}..."

if [ ! -d "${P4C_OUT}" ]; then
  echo "${P4C_OUT} does not exists"
  exit 1
fi

echo "*** Wait for ${1}..."
docker run --rm toschneck/wait-for-it "${SWITCH_ADDR}:9339" -t 600

testerRunName=tester-${RANDOM}
echo "*** Starting ${testerRunName}..."
# Do not attach stdin if running in an environment without it (e.g., Jenkins)
it=$(test -t 0 && echo "-it" || echo "-t")
# shellcheck disable=SC2068
docker run --name "${testerRunName}" "${it}" --init --rm --privileged \
    --network host \
    -v "${FP4TEST_ROOT}":/fabric-p4test \
    -v "${P4C_OUT}":/p4c-out \
    -e PTF_FILTER="${PTF_FILTER}" \
    -e GRPC_ADDR="${SWITCH_ADDR}:9339" \
    --entrypoint /fabric-p4test/run/hw/test_entrypoint.sh \
    "${TESTER_DOCKER_IMG}" \
    ${@}
